{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..","sourcesContent":["//type alias interface는 = 을 지우면 됨\ninterface Store {\n  currentPage: number;\n  feeds: NewsFeed[]; // 생성한 newsFeed라는 형식이 들어가는 배열이라는 뜻\n}\ninterface News {\n  readonly id: number;\n  readonly time_ago: number;\n  readonly title: string;\n  readonly url: string;\n  readonly user: string;\n  readonly content: string;\n}\n\ninterface NewsFeed extends News {\n  readonly comments_count: number;\n  readonly points: number;\n  read?: boolean; // optional 속성\n}\n\ninterface NewsDetail extends News {\n  readonly comments: NewsComment[];\n}\n\ninterface NewsComment extends News {\n  readonly comments: NewsComment[];\n  readonly level: number;\n}\ninterface RouteInfo {\n  path: string;\n  page: View;\n}\n\nconst ajax: XMLHttpRequest = new XMLHttpRequest();\nconst content = document.createElement('div');\nconst NEWS_URL = 'https://api.hnpwa.com/v0/news/1.json';\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\n// 공유되는 값을 객체로 묶어줌\nconst store: Store = {\n  currentPage: 1,\n  feeds: [], //페이지 변경 마다 데이터를 가져오기 때문에 줄여주기 위해 배열을 이용\n};\n\n// 공통요소로 네트워크로 api를 호출\nclass Api {\n  // 내부 저장\n  url: string;\n  ajax: XMLHttpRequest;\n  // 클래스는 초기화 과정이 필요 url, XMLHttpRequest\n  // instance 객체에 저장\n  constructor(url: string) {\n    this.url = url;\n    this.ajax = new XMLHttpRequest();\n  }\n\n  protected getRequest<AjaxResponse>(): AjaxResponse {\n    this.ajax.open('GET', this.url, false); // 데이터를 동기적으로 가져옴\n    this.ajax.send(); //데이터를 가져옴\n\n    return JSON.parse(this.ajax.response); // json형식으로 변환\n  }\n}\n// 클래스를 통해서 더 확실한 목적을 갖게됨\nclass NewsFeedApi extends Api {\n  getData(): NewsFeed[] {\n    return this.getRequest<NewsFeed[]>();\n  }\n}\n\nclass NewsDetailApi extends Api {\n  getData(): NewsDetail {\n    return this.getRequest<NewsDetail>();\n  }\n}\n\n// 공통요소를 코드 개선 부모 클래스에서 공통 요소를 뽑아 낸다\nabstract class View {\n  // 속성\n  private template: string;\n  private renderTemplate: string; // 기존의 템플릿을 가지고 있으면서 화면을 랜더링 할때는 이 템플릿을 이용하고 새로운 값을 받을땐 원본 키값을 채운다\n  private container: HTMLElement;\n  private htmlList: string[];\n\n  constructor(containerId: string, template: string) {\n    const containerElement = document.getElementById(containerId);\n    if (!containerElement) {\n      throw '최상위 컨테이너가 없어 UI를 진행하지 못합니다.'; // 종료\n    }\n    this.container = containerElement;\n    this.template = template;\n    this.renderTemplate = template;\n    this.htmlList = [];\n  }\n\n  //메소드\n  // 슈퍼클래스 기능 요소 - container에 innerHtml에 데이터를 넣고 있음\n  protected updateView(): void {\n    this.container.innerHTML = this.renderTemplate;\n    this.renderTemplate = this.template; // setTemplateData 전 초기 값으로\n  }\n\n  //html 조각을 추가\n  protected addHtml(htmlString: string): void {\n    this.htmlList.push(htmlString);\n  }\n  protected getHtml(): string {\n    const snapshot = this.htmlList.join('');\n    this.clearHtmlList();\n    return snapshot;\n  }\n\n  // key를 받아 데이터 변환\n  protected setTemplateData(key: string, value: string): void {\n    this.renderTemplate = this.renderTemplate.replace(`{{__${key}__}}`, value);\n  }\n\n  private clearHtmlList(): void {\n    this.htmlList = []; // newsfeedview와 Newsdetail에서 사용이 되며 값을 한번 add가 되어지고 있기 때문에 한번 초기화 해줘야한다.\n  }\n\n  // 자식의 구현을 하라는 마킹 추상 메소드\n  abstract render(): void;\n}\n\n// 화면전환 location.hash에서 #은 빈값을 반환함\nclass Router {\n  routeTable: RouteInfo[];\n  defaultRoute: RouteInfo | null;\n\n  constructor() {\n    // this.route 의 경우에는 브라우저의 이벤트시스템이 호출하게됨\n    // 이 호출 시의 route는 라우터의 instance가 아니고\n    // defaultRouter나 routerTable 정보에 접근이 불가능함\n    // 현재 등록 시점을 고정 시켜주기 위해 bind를 사용\n    window.addEventListener('hashchange', this.route.bind(this));\n\n    this.routeTable = [];\n    this.defaultRoute = null;\n  }\n  setDefaultPage(page: View): void {\n    this.defaultRoute = { path: '', page };\n  }\n  addRoutePath(path: string, page: View): void {\n    this.routeTable.push({ path, page });\n  }\n  route() {\n    const routePath = location.hash;\n    if (routePath === '' && this.defaultRoute) {\n      this.defaultRoute.page.render();\n    }\n    for (const routeInfo of this.routeTable) {\n      if (routePath.indexOf(routeInfo.path) >= 0) {\n        routeInfo.page.render();\n        break;\n      }\n    }\n  }\n}\n\n// 글목록을 표시 하는 클래스\nclass NewsFeedView extends View {\n  // 클래스 인스턴스\n  private api: NewsFeedApi;\n  private feeds: NewsFeed[];\n\n  constructor(containerId: string) {\n    let template = `\n      <div class=\"bg-gray-600 min-h-screen\">\n          <div class=\"bg-white text-xl\">\n            <div class=\"mx-auto px-4\">\n              <div class=\"flex justify-between items-center py-6\">\n                <div class=\"flex justify-start\">\n                  <h1 class=\"font-extrabold\">Hacker News</h1>\n                </div>\n                <div class=\"items-center justify-end\">\n                  <a href=\"#/page/{{__prev_page__}}\" class=\"text-gray-500\">\n                    Previous\n                  </a>\n                  <a href=\"#/page/{{__next_page__}}\" class=\"text-gray-500 ml-4\">\n                    Next\n                  </a>\n                </div>\n              </div> \n            </div>\n          </div>\n          <div class=\"p-4 text-2xl text-gray-700\">\n            {{__news_feed__}}        \n          </div>\n        </div>\n      `;\n    super(containerId, template);\n\n    this.api = new NewsFeedApi(NEWS_URL);\n\n    this.feeds = store.feeds;\n\n    //store에 리스트를 생성하여 서버에서 한번만 불러오게끔\n    if (this.feeds.length === 0) {\n      this.feeds = store.feeds = this.api.getData();\n      this.makeFeeds(); // 리드속성 추가\n    }\n  }\n\n  // 화면 그려주는 부분\n  render(): void {\n    store.currentPage = Number(location.hash.substring(7) || 1);\n    for (\n      let i = (store.currentPage - 1) * 10;\n      i < store.currentPage * 10;\n      i++\n    ) {\n      const { read, id, title, comments_count, user, points, time_ago } =\n        this.feeds[i];\n      this.addHtml(`\n    <div class=\"p-6 ${\n      read ? 'bg-green-500' : 'bg-white'\n    } mt-6 rounded-lg shadow-md transition-colors duration-500 hover:bg-green-100\">\n        <div class=\"flex\">\n          <div class=\"flex-auto\">\n            <a href=\"#/show/${id}\">${title}</a>  \n          </div>\n          <div class=\"text-center text-sm\">\n            <div class=\"w-10 text-white bg-green-300 rounded-lg px-0 py-2\">${comments_count}</div>\n          </div>\n        </div>\n        <div class=\"flex mt-3\">\n          <div class=\"grid grid-cols-3 text-sm text-gray-500\">\n            <div><i class=\"fas fa-user mr-1\"></i>${user}</div>\n            <div><i class=\"fas fa-heart mr-1\"></i>${points}</div>\n            <div><i class=\"far fa-clock mr-1\"></i>${time_ago}</div>\n          </div>  \n        </div>\n      </div>    \n  `);\n    }\n\n    this.setTemplateData('news_feed', this.getHtml());\n    this.setTemplateData(\n      'prev_page',\n      String(store.currentPage > 1 ? store.currentPage - 1 : 1)\n    );\n    this.setTemplateData('next_page', String(store.currentPage + 1));\n\n    this.updateView();\n  }\n\n  // 리스트에 읽음상태 추가\n  private makeFeeds() {\n    for (let i = 0; i < this.feeds.length; i++) {\n      this.feeds[i].read = false;\n    }\n  }\n}\n\n//읽는 곳\nclass NewsDetailView extends View {\n  constructor(containerId: string) {\n    let template = `\n  <div class=\"bg-gray-600 min-h-screen pb-8\">\n  <div class=\"bg-white text-xl\">\n    <div class=\"mx-auto px-4\">\n      <div class=\"flex justify-between items-center py-6\">\n        <div class=\"flex justify-start\">\n          <h1 class=\"font-extrabold\">Hacker News</h1>\n        </div>\n        <div class=\"items-center justify-end\">\n          <a href=\"#/page/{{__currentPage__}}\" class=\"text-gray-500\">\n            <i class=\"fa fa-times\"></i>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"h-full border rounded-xl bg-white m-6 p-4 \">\n    <h2>{{__title__}}</h2>\n    <div class=\"text-gray-400 h-20\">\n      {{__content__}}\n    </div>\n\n    {{__comments__}}\n\n  </div>\n</div>\n  `;\n    super(containerId, template);\n  }\n  render() {\n    const id = location.hash.substring(7); // 주소와 관련된 데이터를 전달 #을 제거한 값을 출력\n    const api = new NewsDetailApi(CONTENT_URL.replace('@id', id));\n    const newsDetail: NewsDetail = api.getData();\n\n    for (let i = 0; i < store.feeds.length; i++) {\n      if (store.feeds[i].id === Number(id)) {\n        store.feeds[i].read = true;\n        break;\n      }\n    }\n    this.setTemplateData('comments', this.makeComment(newsDetail.comments));\n    this.setTemplateData('currentPage', String(store.currentPage));\n    this.setTemplateData('title', newsDetail.title);\n    this.setTemplateData('currentPage', String(store.currentPage));\n    this.updateView();\n  }\n\n  makeComment(comments: NewsComment[]): string {\n    for (let i = 0; i < comments.length; i++) {\n      const comment: NewsComment = comments[i];\n\n      this.addHtml(`\n        <div style=\"padding-left: ${comment.level * 40}px;\" class=\"mt-4\">\n          <div class=\"text-gray-400\">\n            <i class=\"fa fa-sort-up mr-2\"></i>\n            <strong>${comment.user}</strong> ${comment.time_ago}\n          </div>\n          <p class=\"text-gray-700\">${comment.content}</p>\n        </div>      \n      `);\n\n      // 대댓글을 가져옴\n      if (comment.comments.length > 0) {\n        this.addHtml(this.makeComment(comments[i].comments)); // 재귀 호출 하위의 comment가 없을때까지 호출\n      }\n    }\n\n    return this.getHtml();\n  }\n}\n\nconst router: Router = new Router();\nconst newsFeedView = new NewsFeedView('root');\nconst newsDetailView = new NewsDetailView('root');\n\nrouter.setDefaultPage(newsFeedView);\nrouter.addRoutePath('/page/', newsFeedView);\nrouter.addRoutePath('/show/', newsDetailView);\n\nrouter.route();\n"]}